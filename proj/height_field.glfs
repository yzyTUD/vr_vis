#version 150

//***** begin interface of fragment.glfs ***********************************
uniform float gamma = 2.2;
void finish_fragment(vec4 color);
//***** end interface of fragment.glfs ***********************************

in vec3 position_eye;
in vec3 normal_eye;
in vec4 color;

//snow texturing 
in vec2 texcoord_fs;
uniform sampler2D cover_tex;
uniform sampler2D cover_tex2;

out vec4 result;

//***** begin interface of side.glsl ***********************************
bool keep_this_side(in vec3 position, in vec3 normal, out int side);
void update_material_color_and_transparency(inout vec3 mat_color, inout float transparency, in int side, in vec4 color);
void update_normal(inout vec3 normal, in int side);
//***** end interface of side.glsl ***********************************

//***** begin interface of surface.glsl ***********************************
struct Material {
	int brdf_type;
	vec3 diffuse_reflectance;
	float roughness;
	float metalness;
	float ambient_occlusion;
	vec3 emission;
	float transparency;
	vec2 propagation_slow_down;
	float roughness_anisotropy;
	float roughness_orientation;
	vec3 specular_reflectance;
};

Material get_material();
vec4 lookup_texture(int ti, vec2 texcoords, bool is_color);
vec4 compute_reflected_radiance(in Material M, vec3 position_eye, vec3 normal_eye);
vec4 compute_reflected_appearance(vec3 position_eye, vec3 normal_eye, vec4 color, int side);
vec4 compute_reflected_appearance_texture(vec3 position_eye, vec3 normal_eye, vec2 texcoords, vec4 color, int side);
//***** end interface of surface.glsl ***********************************



void main()
{
	int side;
	if (!keep_this_side(position_eye, normal_eye, side))
		discard;

	result = color;

	//finish_fragment(compute_reflected_appearance(position_eye, normal_eye, color, side));// color will be overwrite when calling this function...(in gui)

	//finish_fragment(compute_reflected_radiance(get_material(),position_eye, normal_eye));

	//finish_fragment(vec4(1,0,0,1));//works, def. self
	
	//finish_fragment(texture(cover_tex,texcoord_fs));//does not work,color can not be passed
		
}